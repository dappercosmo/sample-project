name: Build and Deploy to GCP

on:
  push:
    branches:
      - dev

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 for the Spring Boot application
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache dependencies for faster builds
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the Spring Boot application
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 5: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Authenticate to GCP
      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'sa-account@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'

      # Step 7: Configure Docker for GCP
      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      # Step 8: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker buildx build --push \
            --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/spring-boot-app:${{ github.sha }} \
            --platform linux/amd64,linux/arm64 \
            .

      # Step 9: Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy spring-boot-app \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/spring-boot-app:${{ github.sha }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated
